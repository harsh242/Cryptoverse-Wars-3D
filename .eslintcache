[{"D:\\BUIDL Labs\\cryptoverse-wars-3d\\cryptoverse-wars-3d\\src\\App.js":"1","D:\\BUIDL Labs\\cryptoverse-wars-3d\\cryptoverse-wars-3d\\src\\components\\model.js":"2","D:\\BUIDL Labs\\cryptoverse-wars-3d\\cryptoverse-wars-3d\\src\\index.js":"3","D:\\BUIDL Labs\\cryptoverse-wars-3d\\cryptoverse-wars-3d\\src\\Yellow.js":"4","D:\\BUIDL Labs\\cryptoverse-wars-3d\\cryptoverse-wars-3d\\src\\reportWebVitals.js":"5","D:\\BUIDL Labs\\cryptoverse-wars-3d\\cryptoverse-wars-3d\\src\\Robot.js":"6"},{"size":859,"mtime":1606303809435,"results":"7","hashOfConfig":"8"},{"size":850,"mtime":1606201846342,"results":"9","hashOfConfig":"8"},{"size":478,"mtime":1606226525733,"results":"10","hashOfConfig":"8"},{"size":4255,"mtime":1606307234050,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":1606198590703,"results":"12","hashOfConfig":"8"},{"size":2541,"mtime":1606236871573,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"arxyb7",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"D:\\BUIDL Labs\\cryptoverse-wars-3d\\cryptoverse-wars-3d\\src\\App.js",[],"D:\\BUIDL Labs\\cryptoverse-wars-3d\\cryptoverse-wars-3d\\src\\components\\model.js",["27","28"],"D:\\BUIDL Labs\\cryptoverse-wars-3d\\cryptoverse-wars-3d\\src\\index.js",[],"D:\\BUIDL Labs\\cryptoverse-wars-3d\\cryptoverse-wars-3d\\src\\Yellow.js",["29"],"D:\\BUIDL Labs\\cryptoverse-wars-3d\\cryptoverse-wars-3d\\src\\reportWebVitals.js",[],"D:\\BUIDL Labs\\cryptoverse-wars-3d\\cryptoverse-wars-3d\\src\\Robot.js",["30"],"import React, { useRef, useState, useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame } from \"react-three-fiber\";\nimport { useGLTFLoader } from \"drei\";\n\nexport default function Model(props) {\n  const group = useRef()\n  const { nodes, materials, animations } = useGLTFLoader('/Robot.glb')\n\n  const actions = useRef()\n  const [mixer] = useState(() => new THREE.AnimationMixer())\n  useFrame((state, delta) => mixer.update(delta))\n  useEffect(() => {\n    actions.current = {\n      Dance: mixer.clipAction(animations[0], group.current),\n      Death: mixer.clipAction(animations[1], group.current),\n      Idle: mixer.clipAction(animations[2], group.current),\n      Jump: mixer.clipAction(animations[3], group.current),\n      No: mixer.clipAction(animations[4], group.current),\n      Punch: mixer.clipAction(animations[5], group.current),\n      Running: mixer.clipAction(animations[6], group.current),\n      Sitting: mixer.clipAction(animations[7], group.current),\n      Standing: mixer.clipAction(animations[8], group.current),\n      ThumbsUp: mixer.clipAction(animations[9], group.current),\n      Walking: mixer.clipAction(animations[10], group.current),\n      WalkJump: mixer.clipAction(animations[11], group.current),\n      Wave: mixer.clipAction(animations[12], group.current),\n      Yes: mixer.clipAction(animations[13], group.current),\n    }\n    \n    return () => animations.forEach((clip) => mixer.uncacheClip(clip))\n  }, [])\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group rotation={[-Math.PI / 2, 0, 0]} scale={[100, 100, 100]}>\n        <primitive object={nodes.Bone} />\n      </group>\n      <group position={[0, 2.37, -0.02]} rotation={[-Math.PI / 2, 0, 0]} scale={[100, 100, 100]}>\n        <skinnedMesh\n          material={materials.Main}\n          geometry={nodes['Hand.R_1'].geometry}\n          skeleton={nodes['Hand.R_1'].skeleton}\n        />\n        <skinnedMesh\n          material={materials.Grey}\n          geometry={nodes['Hand.R_2'].geometry}\n          skeleton={nodes['Hand.R_2'].skeleton}\n        />\n      </group>\n      <group position={[0, 2.37, -0.02]} rotation={[-Math.PI / 2, 0, 0]} scale={[100, 100, 100]}>\n        <skinnedMesh\n          material={materials.Main}\n          geometry={nodes['Hand.L_1'].geometry}\n          skeleton={nodes['Hand.L_1'].skeleton}\n        />\n        <skinnedMesh\n          material={materials.Grey}\n          geometry={nodes['Hand.L_2'].geometry}\n          skeleton={nodes['Hand.L_2'].skeleton}\n        />\n      </group>\n    </group>\n  )\n}\n\n",{"ruleId":"31","severity":1,"message":"32","line":2,"column":27,"nodeType":"33","messageId":"34","endLine":2,"endColumn":33},{"ruleId":"31","severity":1,"message":"35","line":3,"column":18,"nodeType":"33","messageId":"34","endLine":3,"endColumn":26},{"ruleId":"36","severity":1,"message":"37","line":21,"column":6,"nodeType":"38","endLine":21,"endColumn":8,"suggestions":"39"},{"ruleId":"36","severity":1,"message":"37","line":32,"column":6,"nodeType":"38","endLine":32,"endColumn":8,"suggestions":"40"},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useFrame' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'animations' and 'mixer'. Either include them or remove the dependency array.","ArrayExpression",["41"],["42"],{"desc":"43","fix":"44"},{"desc":"43","fix":"45"},"Update the dependencies array to be: [animations, mixer]",{"range":"46","text":"47"},{"range":"48","text":"47"},[749,751],"[animations, mixer]",[1447,1449]]